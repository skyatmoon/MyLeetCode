# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2, carry = 0):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if (l1 or l2):
            if not l1:
                l1 = ListNode(0)
            if not l2:
                l2 = ListNode(0)
            new_val = l1.val + l2.val + carry
            l1.val, l1.next = new_val % 10, self.addTwoNumbers(l1.next, l2.next, int(new_val > 9))
            return l1
        else:
            return ListNode(1) if carry else None
            
  
  03/17/2021 15:28	Accepted	56 ms	13.7 MB
  Runtime: 56 ms, faster than 84.39% of Python online submissions for Add Two Numbers.
  Memory Usage: 13.7 MB, less than 17.61% of Python online submissions for Add Two Numbers.
  
